{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/layerselector.html","webpack:///./src/templates/layerselectorOptgroup.html","webpack:///./src/templates/layerselectorNestedOptgroup.html","webpack:///./src/templates/layerselectorNested.html","webpack:///./src/impl/ol/js/layerselectorcontrol.js","webpack:///./src/facade/js/layerselectorcontrol.js","webpack:///./src/facade/js/layerselector.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LayerSelectorControl","M","impl","Control","map","html","config","utils","isUndefined","LayerSelectorImplControl","exception","config_","selectLayer","layer_","layerList_","legendLayers","checkConfig","Promise","success","fail","template","compileSync","templateVars","addEvents","this","querySelector","addEventListener","selectedLayerId","options","disabled","forEach","element","map_","removeLayers","layer","Array","push","addLayers","id","getControls","length","updateLegend","parentSelectLayer","innerHTML","find","layerGroups","layerGroup","label","myOption","document","createElement","text","appendChild","optgroup","layersId","legend","loadLayers","control","group","nested","arrayLayers","optionLayer","vars","layers","groups","layerId","OptionLayer","dataGroup","templateOptgroup","parentSelectOptions","parentOptions","nestedOptions","templateNestedOptgroup","templateNested","index","selected","LayerSelector","Plugin","position_","position","positionClass_","controls_","metadata_","api","metadata","panel_","ui","Panel","collapsible","collapsedButtonClass","className","tooltip","addControls","on","evt","ADDED_TO_MAP","fire","addPanels","window","plugin","M$plugin$LayerSelector","M$control$LayerSelectorControl","M$impl$control$LayerSelectorControl"],"mappings":"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","file":"layerselector.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = \"<div id=\\\"selector-container\\\" class=\\\"m-control m-container m-layerselector\\\">\\n  <div id=\\\"select-container\\\">\\n    <select id=\\\"selectLayer\\\" name=\\\"selectLayer\\\">\\n      {{#each layers}}\\n      <option value=\\\"{{this.id}}\\\">{{this.legend}}</option>\\n      {{/each}}\\n      </optgroup>\\n    </select>\\n  </div>\\n</div>\";","module.exports = \"<div id=\\\"selector-container\\\" class=\\\"m-control m-container m-layerselector\\\">\\n  <div id=\\\"select-container\\\">\\n    <select id=\\\"selectLayer\\\"  name=\\\"selectLayer\\\">\\n      <option value=\\\"\\\">Seleccione una opción</option>\\n        {{#each groups}}\\n        <optgroup label=\\\"{{this.optgroup}}\\\">\\n          {{#each layers}}\\n          <option value=\\\"{{this.id}}\\\">{{this.legend}}</option>\\n          {{/each}}\\n          {{/each}}\\n        </optgroup>\\n    </select>\\n  </div>\\n</div>\";","module.exports = \"<div id=\\\"selector-container\\\" class=\\\"m-control m-container m-layerselector\\\">\\n  <div id=\\\"select-container\\\">\\n    <select id=\\\"parentSelectLayer\\\" name=\\\"parentSelectLayer\\\">\\n      {{#each parentOptions}}\\n      <option value=\\\"{{this}}\\\">{{this}}</option>   \\n      {{/each}}\\n    </select>\\n    <select id=\\\"selectLayer\\\"  name=\\\"selectLayer\\\">\\n      <option value=\\\"\\\">Seleccione una opción</option>\\n        {{#each nestedOptions}}\\n        <optgroup label=\\\"{{this.optgroup}}\\\">\\n          {{#each layers}}\\n          <option value=\\\"{{this.id}}\\\">{{this.legend}}</option>\\n          {{/each}}\\n          {{/each}}\\n        </optgroup>\\n    </select>\\n  </div>\\n</div>\";","module.exports = \"<div id=\\\"selector-container\\\" class=\\\"m-control m-container m-layerselector\\\">\\n  <div id=\\\"select-container\\\">\\n    <select id=\\\"parentSelectLayer\\\" name=\\\"parentSelectLayer\\\">\\n      {{#each parentOptions}}\\n      <option value=\\\"{{this}}\\\">{{this}}</option>\\n      {{/each}}\\n    </select>\\n    <select id=\\\"selectLayer\\\" name=\\\"selectLayer\\\">\\n      <option value=\\\"\\\">Seleccione una opción</option>\\n      {{#each layers}}\\n      <option value=\\\"{{this.id}}\\\">{{this.legend}}</option>\\n      {{/each}}\\n      </optgroup>\\n    </select>\\n  </div>\\n</div>\";","/**\n * @module M/impl/control/LayerSelectorControl\n */\nexport default class LayerSelectorControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n}\n","/* eslint-disable no-console */\n\n/**\n * @module M/control/LayerSelectorControl\n */\n\nimport LayerSelectorImplControl from 'impl/layerselectorcontrol';\nimport template from 'templates/layerselector';\nimport templateOptgroup from 'templates/layerselectorOptgroup';\nimport templateNestedOptgroup from 'templates/layerselectorNestedOptgroup';\nimport templateNested from 'templates/layerselectorNested';\n\nexport default class LayerSelectorControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(config) {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(LayerSelectorImplControl)) {\n      M.exception(\"La implementación usada no puede crear controles LayerSelectorControl\");\n    }\n    // 2. implementation of this control\n    const impl = new LayerSelectorImplControl();\n    super(impl, \"LayerSelector\");\n    this.config_ = config;\n    this.selectLayer;\n    this.layer_;\n    this.layerList_;\n    this.legendLayers = this.config_.legendLayers;\n    this.checkConfig(this.config_);\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(this.template, this.templateVars);\n      this.addEvents(html)\n      // Añadir código dependiente del DOM\n      success(html);\n    });\n  }\n\n  addEvents(html) {\n    this.selectLayer = html.querySelector(\"select#selectLayer\");\n    //listener para controlar el evento change del selectLayer\n    this.selectLayer.addEventListener(\"change\", () => {\n      if (this.config_.selectedLayerId == \"none\") {\n        this.selectLayer.options[0].disabled = true;\n      }\n\n      let value = this.selectLayer.value;\n\n      this.config_.legendLayers.forEach(element => {\n        this.map_.removeLayers(element.layer)\n      })\n      if (value == \"all\") {\n        this.layerList_ = new Array()\n        this.config_.legendLayers.forEach(element => {\n          this.layer_ = element.layer;\n          this.layerList_.push(this.layer_)\n          this.map_.addLayers(this.layerList_)\n\n        })\n      } else {\n        this.layerList_ = new Array()\n        this.config_.legendLayers.forEach(element => {\n          if (element.id == value) {\n            this.layer_ = element.layer\n            this.layerList_.push(this.layer_)\n            this.map_.addLayers(this.layerList_)\n          }\n        })\n      }\n      if (this.map_.getControls({ 'name': 'Simplelegend' }).length > 0) {\n        let legend = this.map_.getControls({ 'name': 'Simplelegend' })[0];\n        legend.updateLegend(this.layerList_)\n      }\n    })\n\n    this.parentSelectLayer = html.querySelector(\"select#parentSelectLayer\");\n\n    if (this.parentSelectLayer != null) {\n      this.parentSelectLayer.addEventListener(\"change\", () => {\n        let value = this.parentSelectLayer.value;\n        this.selectLayer.innerHTML = \"\";\n        let find = false;\n        do {\n          this.config_.layerGroups.forEach(layerGroup => {\n            if (layerGroup.label == value) {\n              let myOption = document.createElement(\"option\");\n              myOption.text = \"Seleccione una opción\";\n              this.selectLayer.appendChild(myOption)\n              layerGroup.layerGroup.forEach(element => {\n                let optgroup = document.createElement(\"optgroup\");\n                optgroup.label = element.optgroup;\n                this.selectLayer.appendChild(optgroup)\n                element.layersId.forEach(layersId => {\n                  let find = false;\n                  do {\n                    this.legendLayers.forEach(layer => {\n                      if (layer.id == layersId) {\n                        myOption = document.createElement(\"option\");\n                        myOption.value = layersId\n                        myOption.text = layer.layer.legend\n                        optgroup.appendChild(myOption)\n                        find = true;\n                      }\n                    })\n\n                  } while (!find);\n                })\n\n              })\n              find = true;\n            }\n          })\n        } while (!find);\n      })\n    }\n\n    //se carga la/as capas establecidas de inicio\n    if (this.config_.selectedLayerId != \"none\") {\n      this.loadLayers()\n    } \n  }\n\n\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof LayerSelectorControl;\n  }\n\n  // Add your own functions\n\n  checkConfig() {\n    let find = false;\n    //construccion de select simple y sin grupos\n    if (!this.config_.group && !this.config_.nested) {\n      let arrayLayers = new Array();\n      if (this.config_.selectedLayerId == \"all\") {\n        let optionLayer = {\n          id: \"all\",\n          legend: \"Todas las capas\"\n        }\n        arrayLayers.push(optionLayer)\n      } else if (this.config_.selectedLayerId == \"none\") {\n        let optionLayer = {\n          id: null,\n          legend: \"Selecciones una opción\"\n        }\n        arrayLayers.push(optionLayer)\n      }\n\n      this.template = template;\n      this.config_.legendLayers.forEach((layer) => {\n        let optionLayer = {\n          id: layer.id,\n          legend: layer.layer.legend\n        }\n\n        arrayLayers.push(optionLayer)\n      })\n      this.templateVars = {\n        vars: {\n          layers: arrayLayers,\n          selectedLayerId: this.config_.selectedLayerId\n        }\n      }\n    }\n    //construccion de select simple con optgroups\n    if (this.config_.group && !this.config_.nested) {\n      let groups = new Array();\n      this.config_.layerGroups.forEach(group => {\n        let layers = new Array();\n        group.layersId.forEach(layerId => {\n          do {\n            this.legendLayers.forEach(layer => {\n              if (layer.id == layerId) {\n                let OptionLayer = {\n                  id: layer.id,\n                  legend: layer.layer.legend\n                }\n                layers.push(OptionLayer)\n                find = true;\n              }\n            })\n          } while (!find);\n        })\n        let dataGroup = {\n          optgroup: group.optgroup,\n          layers: layers\n        }\n        groups.push(dataGroup)\n      })\n      this.templateVars = {\n        vars: {\n          groups: groups,\n          selectedLayerId: this.config_.selectedLayerId\n        }\n      }\n      this.template = templateOptgroup;\n    }\n\n    //Construccion de los select anidados con optgroup\n    if (this.config_.nested && this.config_.group) {\n      let groups = new Array();\n\n      let parentSelectOptions = new Array();\n      this.config_.layerGroups.forEach(group => {\n        parentSelectOptions.push(group.label)\n      })\n\n      let layerGroup_0 = this.config_.layerGroups[0];\n      layerGroup_0.layerGroup.forEach(group => {\n        let layers = new Array();\n        group.layersId.forEach(layerId => {\n          do {\n            this.legendLayers.forEach(layer => {\n              if (layer.id == layerId) {\n                let OptionLayer = {\n                  id: layer.id,\n                  legend: layer.layer.legend\n                }\n                layers.push(OptionLayer)\n                find = true;\n              }\n            })\n          } while (!find);\n        })\n        let options = {\n          optgroup: group.optgroup,\n          layers: layers\n        }\n        groups.push(options)\n      })\n\n      this.templateVars = {\n        vars: {\n          parentOptions: parentSelectOptions,\n          nestedOptions: groups\n        }\n      }\n\n      this.template = templateNestedOptgroup\n    }\n\n    //Construccion de los select anidados sin optgroup\n    if (this.config_.nested && !this.config_.group) {\n      //console.log(\"anidado sin grupos\")\n\n      //TODO\n\n      this.template = templateNested;\n    }\n\n\n\n\n    //console.log(this.templateVars)\n  }\n\n  loadLayers() {\n    if (this.config_.selectedLayerId == \"all\") {\n      this.layerList_ = new Array()\n      this.legendLayers.forEach(layer => {\n        this.layer_ = layer.layer\n        this.layerList_.push(this.layer_)\n      })\n      this.map_.addLayers(this.layerList_);\n    } else {\n      this.layerList_ = new Array()\n      this.legendLayers.forEach(layer => {\n        if (layer.id == this.config_.selectedLayerId) {\n          this.layer_ = layer.layer\n          this.layerList_.push(this.layer_)\n\n          this.map_.addLayers(this.layerList_)\n        }\n      })\n      let find = false\n\n      do {\n\n        for (let index = 0; index < this.selectLayer.length; index++) {\n          const element = this.selectLayer.options[index].value;\n          if (element == this.config_.selectedLayerId) {\n            this.selectLayer.options[index].selected = true;\n            find = true;\n          }\n        }\n      } while (!find);\n\n\n    }\n\n    if (this.map_.getControls({ 'name': 'Simplelegend' }).length > 0) {\n      let legend = this.map_.getControls({ 'name': 'Simplelegend' })[0];\n      legend.updateLegend(this.layerList_)\n    }\n  }\n}\n","/**\n * @module M/plugin/LayerSelector\n */\nimport 'assets/css/layerselector';\nimport LayerSelectorControl from './layerselectorcontrol';\nimport api from '../../api.json';\n\nexport default class LayerSelector extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(config) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n    this.config_ = config;\n    this.position_ = this.config_.position || 'TR';\n\n    if (this.position_ === 'TL' || this.position_ === 'BL') {\n      this.positionClass_ = 'left';\n    } else {\n      this.positionClass_ = 'right';\n    }\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n\n    /**\n     * Name\n     * @public\n     * @type {string}\n     */\n    this.name = 'LayerSelector';\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.controls_.push(new LayerSelectorControl(this.config_));\n    this.map_ = map;\n    // panel para agregar control - no obligatorio\n    this.panel_ = new M.ui.Panel('panelLayerSelector', {\n      // collapsible: false,\n      collapsible: true,\n      collapsedButtonClass: 'g-cartografia-capas2',\n      className: `m-layer-selector ${this.positionClass_}`,\n      position: M.ui.position[this.position_],\n      tooltip: 'Selector de Capas',\n    });\n    this.panel_.addControls(this.controls_);\n    this.panel_.on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata(){\n    return this.metadata_;\n  }\n\n}\n","import M$plugin$LayerSelector from '/home/emilio/proyectos/ieca/layerselector/src/facade/js/layerselector';\nimport M$control$LayerSelectorControl from '/home/emilio/proyectos/ieca/layerselector/src/facade/js/layerselectorcontrol';\nimport M$impl$control$LayerSelectorControl from '/home/emilio/proyectos/ieca/layerselector/src/impl/ol/js/layerselectorcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.LayerSelector = M$plugin$LayerSelector;\nwindow.M.control.LayerSelectorControl = M$control$LayerSelectorControl;\nwindow.M.impl.control.LayerSelectorControl = M$impl$control$LayerSelectorControl;\n"],"sourceRoot":""}